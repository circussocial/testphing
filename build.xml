<?xml version="1.0" encoding="UTF-8" ?>

<project name="MyProject" default="build">

  <!-- ============================================  -->
  <!-- (GIT Classes )   Target: build                      -->
  <!-- ============================================  -->
  
  <!-- add custom tasks from current directory  -->
    <taskdef name="gitdescribe"   classname="GitDescribeTask" />
    <taskdef name="gitdiff"       classname="GitDiffTask" />
    <taskdef name="gitlog"        classname="GitLogTask" />
    <taskdef name="gitremoteshow" classname="GitRemoteShowTask" />
    <taskdef name="gittag"        classname="GitTagTask" />
    <taskdef name="gitcommit"        classname="GitCommitTask" />
    <taskdef name="gitpush"        classname="GitPushTask" />
    

    <!-- assume our current directory IS the git repo to operate on -->
    <property name="author.name" value="Amol C" />
    <property name="repo.dir" value="." />
    <property name="remote.repo" value="git@github.com:circussocial/testphing.git" />
    
    
    <resolvepath propertyName="repo.dir.resolved" file="${repo.dir}" />
    

    <!-- demonstrate task for git-describe command -->
    <target name="gitdescribe">
        <echo msg="Equivalent to `git describe --all --long --always`" />
        <gitdescribe repository="${repo.dir.resolved}"
                     all="true"
                     long="true"
                     always="true" />
        <echo msg="Equivalent to `git describe --tags --abbrev=0 --match *-complete`" />
        <gitdescribe repository="${repo.dir.resolved}"
                     tags="true"
                     abbrev="0"
                     match="*-complete"
                     outputProperty="gitDescribeOutput" />
        <echo msg="Latest tag matching *-complete: ${gitDescribeOutput}" />
    </target>

    <!-- demonstrate task for git-describe command -->
    <target name="gitdiff">
        <echo msg="Equivalent to `git diff --shortstat --ignore-submodules HEAD^..HEAD`" />
        <gitdiff repository="${repo.dir.resolved}"
                 shortstat="true"
                 ignoreSubmodules="true"
                 commits="HEAD^..HEAD"
                 outputProperty="gitDiffOutput" />
        <echo msg="Files affected since HEAD^: ${gitDiffOutput}" />
        <echo msg="Equivalent to `git diff --cached`" />
        <gitdiff repository="${repo.dir.resolved}"
                 cached="true"
                 outputProperty="gitDiffOutput" />
        <if>
            <equals arg1="${gitDiffOutput}" arg2="" />
            <then>
                <echo msg="No staged changes!" />
            </then>
            <else>
                <echo msg="Currently staged changes: ${gitDiffOutput}" />
            </else>
        </if>
    </target>

    <!-- demonstrate task for git-log command -->
    <target name="gitlog">
        <echo msg="Equivalent to `git log --name-status --format=oneline HEAD^..HEAD`" />
        <gitlog repository="${repo.dir.resolved}"
                nameStatus="true"
                format="oneline"
                since="HEAD^"
                until="HEAD"
                outputProperty="gitLogOutput" />
        <echo msg="Everything that's happened since HEAD^: ${gitLogOutput}" />
    </target>

    <!-- demonstrate task for git-remote-show command -->
    <target name="gitremoteshow">
        <echo msg="Equivalent to `git remote show origin`" />
        <gitremoteshow repository="${repo.dir.resolved}"
                       name="origin"
                       outputProperty="gitRemoteShowOutput" />
        <echo msg="All the dirt we have on origin: ${gitRemoteShowOutput}" />
    </target>

    <!-- demonstrate task for git-tag command -->
    <target name="gittag">
        <echo msg="Equivalent to `git tag -a -m 'foo bar baz' MyUnsignedTag`" />
        <echo msg="${repo.dir}" />
        <echo msg="${repo.dir.resolved}" />
        <echo msg="---------" />
        
        <gittag repository="${repo.dir.resolved}"
                annotate="true"
                message="foo bar baz"
                name="MyUnsignedTag" />
        <echo msg="Equivalent to `git tag -a -f -m 'fizz buzz' MyUnsignedTag`" />
        <gittag repository="${repo.dir.resolved}"
                annotate="true"
                replace="true"
                message="fizz buzz"
                name="MyUnsignedTag" />
        <echo msg="Equivalent to `git tag -l`" />
        <gittag repository="${repo.dir.resolved}"
                list="true"
                outputProperty="gitTagOutput" />
        <echo msg="All current tags: ${gitTagOutput}" />
        <echo msg="Equivalent to `git tag -d MyUnsignedTag`" />
        <gittag repository="${repo.dir.resolved}"
                delete="true"
                name="MyUnsignedTag" />
    </target>
  
  
  
  
    <target name="build" description="Build"  >
      
         <version releasetype="Bugfix" file="version.txt" property="version.number"/>
         
          <tstamp>
                <format property="DATE" pattern="%c" />
          </tstamp>
        
        <gitcommit
             repository="${repo.dir.resolved}" 
             message="${version.number} ${DATE} commited by Author ${author.name} " allFiles="true" />
        
        <gittag 
              repository="${repo.dir.resolved}" 
                 name="${version.number}"
                 annotate="true" message="Version ${version.number} ${DATE} by ${author.name}"/>
        
        <gitpush
        repository="${repo.dir}" 
        destination="origin" refspec="master"
        quiet="false" tags="true" />
        
       
        
        
     
      <echo msg="${version.number}" />
      <echo msg="${repo.dir}" />
      <echo msg="${repo.dir.resolved}" />
     
     
     
     
    </target>

  

    
  
</project>
